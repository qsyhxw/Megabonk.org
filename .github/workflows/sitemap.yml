name: Build aliases & generate sitemap

on:
  push:
    branches: [ main ]        # 如主分支不是 main，请改这里
  workflow_dispatch:
  schedule:
    - cron: "17 3 * * 1"      # 每周一 03:17 UTC 自动刷新（可删除）

permissions:
  contents: write              # 允许工作流向仓库推送

concurrency:
  group: autoupdate-sitemap
  cancel-in-progress: true     # 避免并发修改相互冲突

jobs:
  sitemap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main with full history
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      # 可选：若你的某些页面是 *.html 文件（比如 database/weapons/aegis.html），
      # 下面这步会为它们创建“目录别名”：database/weapons/aegis/index.html，
      # 这样 https://megabonk.org/database/weapons/aegis/ 也能 200。
      # 已经是目录结构（…/index.html）的路径不会受影响。
      - name: Create extensionless aliases for database/*
        run: |
          set -euxo pipefail
          shopt -s globstar nullglob
          # 仅处理 database/ 下的 *.html，避免影响 guides/ 等已是目录结构的页面
          for f in database/**/*.html; do
            base="$(basename "$f")"
            # 跳过目录首页和通用 404
            if [ "$base" = "index.html" ] || [ "$base" = "404.html" ]; then
              continue
            fi
            dir="${f%.html}"
            mkdir -p "$dir"
            cp -f "$f" "$dir/index.html"
          done

      - name: Generate sitemap.xml (extensionless URLs)
        uses: cicirello/generate-sitemap@v1
        with:
          base-url-path: https://megabonk.org/
          drop-html-extension: true
          # 如果你的 GitHub Pages 是从 docs/ 发布，请取消下面两行注释：
          # path-to-root: docs
          # sitemap-path: docs/sitemap.xml


      - name: Commit & rebase, then push
        run: |
          set -euxo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 仅在确有变更时提交
          if ! git diff --quiet; then
            git add -A
            git commit -m "🤖 Update aliases & sitemap [skip ci]"
          else
            echo "No changes to commit."
            exit 0
          fi

          # 避免 non-fast-forward：先同步远端再 rebase
          git fetch origin main
          git rebase origin/main

          # 推送到 main（如启用分支保护，请改用 PR 流程）
          git push origin HEAD:main
